import type { coresdk } from '@temporalio/proto';
import { WorkflowCreateOptionsInternal } from './interfaces';
import { SinkCall } from './sinks';
export { PromiseStackStore } from './internals';
export declare function overrideGlobals(): void;
/**
 * Initialize the isolate runtime.
 *
 * Sets required internal state and instantiates the workflow and interceptors.
 */
export declare function initRuntime(options: WorkflowCreateOptionsInternal): void;
/**
 * Run a chunk of activation jobs
 * @returns a boolean indicating whether job was processed or ignored
 */
export declare function activate(activation: coresdk.workflow_activation.WorkflowActivation, batchIndex: number): void;
/**
 * Conclude a single activation.
 * Should be called after processing all activation jobs and queued microtasks.
 *
 * Activation failures are handled in the main Node.js isolate.
 */
export declare function concludeActivation(): coresdk.workflow_completion.IWorkflowActivationCompletion;
export declare function getAndResetSinkCalls(): SinkCall[];
/**
 * Loop through all blocked conditions, evaluate and unblock if possible.
 *
 * @returns number of unblocked conditions.
 */
export declare function tryUnblockConditions(): number;
/**
 * Predicate used to prevent triggering conditions for non-query and non-patch jobs.
 */
export declare function shouldUnblockConditions(job: coresdk.workflow_activation.IWorkflowActivationJob): boolean;
export declare function dispose(): void;
