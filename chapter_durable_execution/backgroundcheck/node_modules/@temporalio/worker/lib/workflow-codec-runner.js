"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowCodecRunner = void 0;
const internal_non_workflow_1 = require("@temporalio/common/lib/internal-non-workflow");
const proto_1 = require("@temporalio/proto");
/**
 * Helper class for decoding Workflow activations and encoding Workflow completions.
 */
class WorkflowCodecRunner {
    constructor(codecs) {
        this.codecs = codecs;
    }
    /**
     * Run codec.decode on the Payloads in the Activation message.
     */
    async decodeActivation(activation) {
        return {
            ...activation,
            jobs: activation.jobs
                ? await Promise.all(activation.jobs.map(async (job) => ({
                    ...job,
                    startWorkflow: job.startWorkflow
                        ? {
                            ...job.startWorkflow,
                            arguments: await (0, internal_non_workflow_1.decodeOptional)(this.codecs, job.startWorkflow.arguments),
                            headers: (0, internal_non_workflow_1.noopDecodeMap)(job.startWorkflow.headers),
                            continuedFailure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.startWorkflow.continuedFailure),
                            memo: {
                                fields: await (0, internal_non_workflow_1.decodeOptionalMap)(this.codecs, job.startWorkflow.memo?.fields),
                            },
                            lastCompletionResult: {
                                payloads: await (0, internal_non_workflow_1.decodeOptional)(this.codecs, job.startWorkflow.lastCompletionResult?.payloads),
                            },
                            searchAttributes: job.startWorkflow.searchAttributes
                                ? {
                                    indexedFields: job.startWorkflow.searchAttributes.indexedFields
                                        ? (0, internal_non_workflow_1.noopDecodeMap)(job.startWorkflow.searchAttributes?.indexedFields)
                                        : undefined,
                                }
                                : undefined,
                        }
                        : null,
                    queryWorkflow: job.queryWorkflow
                        ? {
                            ...job.queryWorkflow,
                            arguments: await (0, internal_non_workflow_1.decodeOptional)(this.codecs, job.queryWorkflow.arguments),
                            headers: (0, internal_non_workflow_1.noopDecodeMap)(job.queryWorkflow.headers),
                        }
                        : null,
                    cancelWorkflow: job.cancelWorkflow
                        ? {
                            ...job.cancelWorkflow,
                            details: await (0, internal_non_workflow_1.decodeOptional)(this.codecs, job.cancelWorkflow.details),
                        }
                        : null,
                    signalWorkflow: job.signalWorkflow
                        ? {
                            ...job.signalWorkflow,
                            input: await (0, internal_non_workflow_1.decodeOptional)(this.codecs, job.signalWorkflow.input),
                            headers: (0, internal_non_workflow_1.noopDecodeMap)(job.signalWorkflow.headers),
                        }
                        : null,
                    resolveActivity: job.resolveActivity
                        ? {
                            ...job.resolveActivity,
                            result: job.resolveActivity.result
                                ? {
                                    ...job.resolveActivity.result,
                                    completed: job.resolveActivity.result.completed
                                        ? {
                                            result: await (0, internal_non_workflow_1.decodeOptionalSingle)(this.codecs, job.resolveActivity.result.completed.result),
                                        }
                                        : null,
                                    failed: job.resolveActivity.result.failed
                                        ? {
                                            failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveActivity.result.failed.failure),
                                        }
                                        : null,
                                    cancelled: job.resolveActivity.result.cancelled
                                        ? {
                                            failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveActivity.result.cancelled.failure),
                                        }
                                        : null,
                                }
                                : null,
                        }
                        : null,
                    resolveChildWorkflowExecution: job.resolveChildWorkflowExecution
                        ? {
                            ...job.resolveChildWorkflowExecution,
                            result: job.resolveChildWorkflowExecution.result
                                ? {
                                    ...job.resolveChildWorkflowExecution.result,
                                    completed: job.resolveChildWorkflowExecution.result.completed
                                        ? {
                                            result: await (0, internal_non_workflow_1.decodeOptionalSingle)(this.codecs, job.resolveChildWorkflowExecution.result.completed.result),
                                        }
                                        : null,
                                    failed: job.resolveChildWorkflowExecution.result.failed
                                        ? {
                                            failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveChildWorkflowExecution.result.failed.failure),
                                        }
                                        : null,
                                    cancelled: job.resolveChildWorkflowExecution.result.cancelled
                                        ? {
                                            failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveChildWorkflowExecution.result.cancelled.failure),
                                        }
                                        : null,
                                }
                                : null,
                        }
                        : null,
                    resolveChildWorkflowExecutionStart: job.resolveChildWorkflowExecutionStart
                        ? {
                            ...job.resolveChildWorkflowExecutionStart,
                            cancelled: job.resolveChildWorkflowExecutionStart.cancelled
                                ? {
                                    failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveChildWorkflowExecutionStart.cancelled.failure),
                                }
                                : null,
                        }
                        : null,
                    resolveSignalExternalWorkflow: job.resolveSignalExternalWorkflow
                        ? {
                            ...job.resolveSignalExternalWorkflow,
                            failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveSignalExternalWorkflow.failure),
                        }
                        : null,
                    resolveRequestCancelExternalWorkflow: job.resolveRequestCancelExternalWorkflow
                        ? {
                            ...job.resolveRequestCancelExternalWorkflow,
                            failure: await (0, internal_non_workflow_1.decodeOptionalFailure)(this.codecs, job.resolveRequestCancelExternalWorkflow.failure),
                        }
                        : null,
                })))
                : null,
        };
    }
    /**
     * Run codec.encode on the Payloads inside the Completion message.
     */
    async encodeCompletion(completion) {
        const encodedCompletion = {
            ...completion,
            failed: completion.failed
                ? { failure: await (0, internal_non_workflow_1.encodeOptionalFailure)(this.codecs, completion?.failed?.failure) }
                : null,
            successful: completion.successful
                ? {
                    commands: completion.successful.commands
                        ? await Promise.all(completion.successful.commands.map(async (command) => ({
                            ...command,
                            scheduleActivity: command.scheduleActivity
                                ? {
                                    ...command.scheduleActivity,
                                    arguments: await (0, internal_non_workflow_1.encodeOptional)(this.codecs, command.scheduleActivity?.arguments),
                                    // don't encode headers
                                    headers: (0, internal_non_workflow_1.noopEncodeMap)(command.scheduleActivity?.headers),
                                }
                                : undefined,
                            upsertWorkflowSearchAttributes: command.upsertWorkflowSearchAttributes
                                ? {
                                    ...command.upsertWorkflowSearchAttributes,
                                    searchAttributes: (0, internal_non_workflow_1.noopEncodeMap)(command.upsertWorkflowSearchAttributes.searchAttributes),
                                }
                                : undefined,
                            respondToQuery: command.respondToQuery
                                ? {
                                    ...command.respondToQuery,
                                    succeeded: {
                                        response: await (0, internal_non_workflow_1.encodeOptionalSingle)(this.codecs, command.respondToQuery.succeeded?.response),
                                    },
                                    failed: await (0, internal_non_workflow_1.encodeOptionalFailure)(this.codecs, command.respondToQuery.failed),
                                }
                                : undefined,
                            completeWorkflowExecution: command.completeWorkflowExecution
                                ? {
                                    ...command.completeWorkflowExecution,
                                    result: await (0, internal_non_workflow_1.encodeOptionalSingle)(this.codecs, command.completeWorkflowExecution.result),
                                }
                                : undefined,
                            failWorkflowExecution: command.failWorkflowExecution
                                ? {
                                    ...command.failWorkflowExecution,
                                    failure: await (0, internal_non_workflow_1.encodeOptionalFailure)(this.codecs, command.failWorkflowExecution.failure),
                                }
                                : undefined,
                            continueAsNewWorkflowExecution: command.continueAsNewWorkflowExecution
                                ? {
                                    ...command.continueAsNewWorkflowExecution,
                                    arguments: await (0, internal_non_workflow_1.encodeOptional)(this.codecs, command.continueAsNewWorkflowExecution.arguments),
                                    memo: await (0, internal_non_workflow_1.encodeMap)(this.codecs, command.continueAsNewWorkflowExecution.memo),
                                    // don't encode headers
                                    headers: (0, internal_non_workflow_1.noopEncodeMap)(command.continueAsNewWorkflowExecution.headers),
                                    // don't encode searchAttributes
                                    searchAttributes: (0, internal_non_workflow_1.noopEncodeMap)(command.continueAsNewWorkflowExecution.searchAttributes),
                                }
                                : undefined,
                            startChildWorkflowExecution: command.startChildWorkflowExecution
                                ? {
                                    ...command.startChildWorkflowExecution,
                                    input: await (0, internal_non_workflow_1.encodeOptional)(this.codecs, command.startChildWorkflowExecution.input),
                                    memo: await (0, internal_non_workflow_1.encodeMap)(this.codecs, command.startChildWorkflowExecution.memo),
                                    // don't encode headers
                                    headers: (0, internal_non_workflow_1.noopEncodeMap)(command.startChildWorkflowExecution.headers),
                                    // don't encode searchAttributes
                                    searchAttributes: (0, internal_non_workflow_1.noopEncodeMap)(command.startChildWorkflowExecution.searchAttributes),
                                }
                                : undefined,
                            signalExternalWorkflowExecution: command.signalExternalWorkflowExecution
                                ? {
                                    ...command.signalExternalWorkflowExecution,
                                    args: await (0, internal_non_workflow_1.encodeOptional)(this.codecs, command.signalExternalWorkflowExecution.args),
                                    headers: (0, internal_non_workflow_1.noopEncodeMap)(command.signalExternalWorkflowExecution.headers),
                                }
                                : undefined,
                            scheduleLocalActivity: command.scheduleLocalActivity
                                ? {
                                    ...command.scheduleLocalActivity,
                                    arguments: await (0, internal_non_workflow_1.encodeOptional)(this.codecs, command.scheduleLocalActivity.arguments),
                                    // don't encode headers
                                    headers: (0, internal_non_workflow_1.noopEncodeMap)(command.scheduleLocalActivity.headers),
                                }
                                : undefined,
                            modifyWorkflowProperties: command.modifyWorkflowProperties
                                ? {
                                    ...command.modifyWorkflowProperties,
                                    upsertedMemo: {
                                        fields: await (0, internal_non_workflow_1.encodeMap)(this.codecs, command.modifyWorkflowProperties.upsertedMemo?.fields),
                                    },
                                }
                                : undefined,
                        })) ?? [])
                        : null,
                }
                : null,
        };
        return proto_1.coresdk.workflow_completion.WorkflowActivationCompletion.encodeDelimited(encodedCompletion).finish();
    }
}
exports.WorkflowCodecRunner = WorkflowCodecRunner;
//# sourceMappingURL=workflow-codec-runner.js.map