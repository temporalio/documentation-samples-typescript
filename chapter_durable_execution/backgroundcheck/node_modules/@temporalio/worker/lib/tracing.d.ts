import * as otel from '@opentelemetry/api';
/**
 * Get either an opentelemetry tracer or a NoopTracer based on the `enabled` param.
 */
export declare function getTracer(enabled: boolean): otel.Tracer;
/**
 * Conveience function for creating a child span from an existing span
 */
export declare function childSpan(tracer: otel.Tracer, parent: otel.Span, name: string, options?: otel.SpanOptions): otel.Span;
/**
 * Wraps `fn` in a span which ends when function returns or throws
 *
 * @param acceptableErrors If this function returns true, we will not mark
 * the span as failed for such errors
 */
export declare function instrument<T>(tracer: otel.Tracer, parent: otel.Span, name: string, fn: (span: otel.Span) => Promise<T>, acceptableErrors?: (err: unknown) => boolean): Promise<T>;
