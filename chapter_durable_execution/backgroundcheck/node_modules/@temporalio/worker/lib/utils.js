"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertToParentWorkflowType = exports.byteArrayToBuffer = exports.toMB = exports.partition = exports.MiB = void 0;
const workflow_1 = require("@temporalio/workflow");
exports.MiB = 1024 ** 2;
// ts-prune-ignore-next (no idea why ts-prune is complaining all of a sudden)
function partition(arr, predicate) {
    const truthy = Array();
    const falsy = Array();
    arr.forEach((v) => (predicate(v) ? truthy : falsy).push(v));
    return [truthy, falsy];
}
exports.partition = partition;
function toMB(bytes, fractionDigits = 2) {
    return (bytes / 1024 / 1024).toFixed(fractionDigits);
}
exports.toMB = toMB;
function byteArrayToBuffer(array) {
    return array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);
}
exports.byteArrayToBuffer = byteArrayToBuffer;
function convertToParentWorkflowType(parent) {
    if (!parent) {
        return undefined;
    }
    if (!parent.workflowId || !parent.runId || !parent.namespace) {
        throw new workflow_1.IllegalStateError('Parent INamespacedWorkflowExecution is missing a field that should be defined');
    }
    return {
        workflowId: parent.workflowId,
        runId: parent.runId,
        namespace: parent.namespace,
    };
}
exports.convertToParentWorkflowType = convertToParentWorkflowType;
//# sourceMappingURL=utils.js.map