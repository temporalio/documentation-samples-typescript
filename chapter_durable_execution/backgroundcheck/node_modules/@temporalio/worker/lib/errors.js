"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errors = exports.GracefulShutdownPeriodExpiredError = void 0;
const common_1 = require("@temporalio/common");
const type_helpers_1 = require("@temporalio/common/lib/type-helpers");
const core_bridge_1 = require("@temporalio/core-bridge");
/**
 * Thrown from JS if Worker does not shutdown in configured period
 */
let GracefulShutdownPeriodExpiredError = class GracefulShutdownPeriodExpiredError extends Error {
};
GracefulShutdownPeriodExpiredError = __decorate([
    (0, type_helpers_1.SymbolBasedInstanceOfError)('GracefulShutdownPeriodExpiredError')
], GracefulShutdownPeriodExpiredError);
exports.GracefulShutdownPeriodExpiredError = GracefulShutdownPeriodExpiredError;
/**
 * @deprecated Import error classes directly
 */
exports.errors = {
    IllegalStateError: common_1.IllegalStateError,
    ShutdownError: core_bridge_1.ShutdownError,
    TransportError: core_bridge_1.TransportError,
    UnexpectedError: core_bridge_1.UnexpectedError,
    GracefulShutdownPeriodExpiredError,
};
//# sourceMappingURL=errors.js.map